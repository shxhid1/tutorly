
// Firestore security rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isValidResource(resource) {
      return resource.size() < 10 * 1024 * 1024; // 10MB max size
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read and write their own profile
      allow get: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      
      // Only admins can delete user profiles
      allow delete: if isAdmin();
      
      // Admins can list all users
      allow list: if isAdmin();
    }
    
    // Summaries collection
    match /summaries/{summaryId} {
      // Users can only access their own summaries
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Notes collection
    match /notes/{noteId} {
      // Users can only access their own notes
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Resources collection (shared content)
    match /resources/{resourceId} {
      // Any authenticated user can read resources
      allow read: if isAuthenticated();
      
      // Only admins can create, update, or delete resources
      allow create, update, delete: if isAdmin();
    }
    
    // All other collections are locked down
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
